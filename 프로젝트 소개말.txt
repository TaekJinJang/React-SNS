풀스택을 개발할 예정이지만
프론트엔드 개발자라는 입장으로 가상의 백엔드 개발자와 협업을 하며 프로젝트를 진행한다고 생각

초반 프론트엔드를 개발할땐 가상의 백엔드 개발자가 api나 데이터 사용법을 알려준다고 가정을 하고 만듦

또는 api를 만들지 않았을땐 더미데이터를 사용해서 개발

동시에 같이 작업을 해야 하지만 그렇지 않을때를 생각하고 프로젝트 진행

백엔드에서 서버구축을 못했을 시엔 프론트엔드에선 화면이나 더미데이터를 ㅅ활용하여 작업을 해야함
=> 실제 데이터 및 서버 구축을 끝냈을때 바꿔끼우기만 하면 바로 실행 가능하게끔

리액트를 쓰는데 왜 next를 추가적으로 골랐는가 ?
 => next는 리액트를 사용한 프레임워크인데 실무에서 사용하기에 더더욱 갖춰진게 많음
     단점으로는 프레임워크 특성상 정해진 틀에서 사용하기때문에 코딩의 자유도가 떨어짐
     장점은 리액트는 SPA(CSR)로 만드는데 next는 SSR을 가능케 함

CSR 과 SSR 의 차이점을 명확하게 알아야 함 ! 

내가 리액트를 배웠다고 무턱대로 모든 프로젝트에 리액트를 쓰는가 ?? 
  => X !! 아니다 리액트는 사용자와 빠른 인터랙션이 필요할때만 사용한다 
      이유는 ?? 단점이 있다. 맨 처음 페이지가 로딩이 길기 때문에 검색엔진이 느림
      이게 왜 단점이냐 ??? 난 홈페이지에서 프로필만 보고 싶은데 볼 생각도 없는 게시판, 블로그, 관리자 페이지 등등이 다 로딩이 되벎
      이런 시간 손해를 볼 필요가 없는 사이트들은 ssr을 사용하는게 맞음